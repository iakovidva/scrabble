import classes


def guidelines():
    '''
    ~~~~~~ Οδηγίες παιχνιδιού - Τρόπος υλοποίησης (Πάτα q για είσοδο στην εφαρμογή) ~~~~~~
    
    ΟΔΗΓΙΕΣ:

    Τρόπος παιχνιδού:

        Για να ξεκινήσει ένα παιχνίδι ο χρήστης πρέπει να επιλέξει την επιλογή 3 (Παιχνίδι)
        στο βασικό μενού. Με το που διαλέξει το παιχνίδι, γίνονται οι κατάλληλες ετοιμασίες
        και το παιχνίδι ξεκίνα. Με την λήξη του παιχνιδιού τερματίζει και το πρόγραμμα, εμφα-
        νίζοντας κατάλληλο μήνυμα αν ο παίκτης νίκηση ή έχασε και ενημερώνεται η βάση με
        τα δεδομένα παιχνιδιού. 

    Εμφάνιση Σκορ:

        Για την εμφάνιση των αποτελεσμάτων από τα παιχνίδια που έχουν παιχτεί, αρκεί η επιλογή
        1 (Σκορ) στο βασικό μενού εκκίνησης. Τυπώνονται τα δεδομένα στην οθόνη και έπειτα πατώντας
        οτιδήποτε επιστρέφεται η εκτέλεση στο βασικό μενού.

    Ρυθμίσεις παιχνιδιού:

        Από τις Ρυθμίσεις ο χρήστης έχει τη δυνατότητα να μηδενίσει την βάση δεδομένων και να 
        ξεκινήσει από την αρχεία την καταγγραφή των αποτελεσμάτων.

    Έξοδος: 
        
        Με την επιλογή q (Έξοδος) τερματίζεται η εκτέλεση του προγράμματος.


    ΥΛΟΠΟΙΗΣΗ:

        class SakClass:
            Κλάση που υλοιποιεί τον ρόλο που έχει το σακουλάκι στο παιχνίδι Scrabble.
            
            Attributes:
            -----------
            lets : dict
                Λεξικό με γράμματα, πλήθος και αξία αυτών.
            letlist : list
                Λίστα που περιέχει τα γράμματα του σακουλιού.

            Methods:
            --------
            __init__() : 
                Καλεί την randomize_sak() για να μπουν τα γράμματα του παιχνιδιού στην λίστα.
            randomize_sak() :
                Ετοιμάζει το σακίδιο "ανακατεύοντας" τα γράμματα.
            getLetters() : 
                Ανακατεύει τα γράμματα, τα βγάζει από το σακίδιο και τα επιστρέφει σε αυτόν 
                που τα ζήτησε.
            putBackLetters() :
                Προσθήκη στην λίστα γραμμάτων τα γράμματα που επιστρέφονται από τους παίκτες.


        class Player:
            Κλάση που υλοιποιεί την ευρύτερη έννοια του παίκτη του παιχνιδιού.
            
            Attributes:
            -----------
            self.letters_list : list
                Λίστα με τα γράμματα που έχει στην κατοχή του ο κάθε παίκτης.
            self.score : int
                Το σκορ που έχει ο παίκτης στο παιχνίδι.

            Methods:
            --------
            __init__() : 
                Αρχικοποιεί τις ιδιότητες του παίκτη και προσθέτει στη λίστα γραμμάτων του
                7 γράμματα από το σακουλάκι.
            
        class Human(Player):
            Κλάση που υλοιποιεί τον παίκτη του παιχνιδιού.
            
            Attributes (Κληρονομούνται από την κλάση Player):
            -----------
            self.letters : list
                Λίστα με τα γράμματα που έχει στην κατοχή του ο παίκτης.
            self.score : int
                Το σκορ που έχει ο παίκτης στο παιχνίδι.

            Methods:
            --------
            __init__() : 
                Αρχικοποιεί τις ιδιότητες του παίκτη και προσθέτει στη λίστα γραμμάτων του
                7 γράμματα από το σακουλάκι.
            play() :
                Χειρίζεται τον τρόπου παιξίματος του παίκτη. Κάνει τους απαραίτητους ελέγχους
                για την λέξη που γράφει, χειρίζεται τις ιδιότητες του αφαιρώντας - συμπληρώνοντας
                γράμματα ανάλογα με την περίπτωση, εμφανίζει τα κατάλληλα μηνύματα και επιστρέφει
                True αν μετά από αυτή τη γύρα ο παίκτης μπορεί να ξανά παίξει ή False αν δεν
                μπορεί να παίξει και άλλο γύρο. 

            printing() : 
                Τυπώνει τα γράμματα του παίκτη στην οθόνη.

        class Computer(Player):
            Κλάση που υλοιποιεί το bot του παιχνιδιού.
            
            Attributes (Κληρονομούνται από την κλάση Player):
            -----------
            self.letters : list
                Λίστα με τα γράμματα που έχει στην κατοχή του το bot.
            self.score : int
                Το σκορ που έχει το bot στο παιχνίδι.

            Methods:
            --------
            __init__() : 
                Αρχικοποιεί τις ιδιότητες του bot και προσθέτει στη λίστα γραμμάτων του
                7 γράμματα από το σακουλάκι.
            play() :
                Χειρίζεται τον τρόπου παιξίματος του bot. Χρησιμοποιεί δύο λεξικά για τις λέξεις
                που βρίσκει, όπου στο δεύτερο απλά ταξινομεί βάση των σκορ. Ελέγχει για κάθε μετάθεση
                των διαθέσιμων γραμμάτων τι λέξεις υπάρχουν, τις προσθέτει στο λεξικό μαζί με τα σκορ
                τους. Επιλέγει μία λέξη μεταξύ των 3 καλύτερων (αν έχει βρει τουλάχιστον 3), αφαιρεί
                τα γράμματα από το bot, συμπληρώνει από το σακουλάκι και τυπώνει κατάλληλα μηνύματα.
                Επιστρέφει True αν μετά από αυτό το γύρο μπορεί να ξανά παίξει ή False αν δεν
                μπορεί να παίξει και άλλο γύρο. 

        
        class Game:
            Κλάση που υλοιποιεί το bot του παιχνιδιού.
            
            Attributes:
            -----------
            self.sak : Αντικείμενο της κλάσης SakClass
            self.player : Αντικείμενο της κλάσης Human
            self.bot : Αντικείμενο της κλάσης Computer
            
            Methods:
            --------
            __init__() : 
                Δημιουργία των παραπάνω αντικειμένων.
            setup() :
                Φόρτωση του αρχείου βάσης, εμφάνιση του μενού, κλήση κατάλληλης συνάρτησης
                ανάλογα με την επιλογή του χρήστη.
            run() :
                Ξεκινάει το παιχνίδι, καλώντας τον παίκτη να παίξει, έπειτα το bot, εμφανίζει
                το σκορ του γύρου και ξανά από την αρχή, όσο είναι δυνατόν.
            end() :
                Ελέγχει τον νικητή του παιχνιδιού. Καλή την updateStats() η οποία ενημερώνει
                την βάση δεδομένων.
            printMenu() :
                Εμφάνιση του μενού εκκίνησης του προγράμματος.
            printStats() :
                Εμφάνιση των δεδομένων της βάσης.
            Settings() :
                Η μόνη επιλογή στις ρυθμίσεις είναι ο μηδενισμός του αρχείου δεδομένων. 
                Σε περίπτωση που ο χρήστης επιλέξει αυτή τη λειτουργία δίνοντας 1,
                δημιουργείται νέα βάση και εγγράφεται στο αρχείο db.json. Υπάρχει 
                σκέψη για περισσότερες ρυθμίσεις για αυτό και η print και η επιλογή
                του χρήστη.
            updateStats() :
                Ελέγχεται ο νικητής. Ενημερώνονται το λεξικό data που έχει τα δεδομένα της
                βάσης και τα ξανά γράφει στο αρχείο db.json. Αν αυτό για κάποιο λόγο δεν
                είναι δυνατό, εμφανίζεται κατάλληλο μήνυμα και τερματίζει το πρόγραμμα.
            createDB() :
                Δημιουργία λεξικού με τα στατιστικά που κρατάει η βάση και επιστροφή αυτού.

            
    '''


def main():
    help(guidelines)
    game = classes.Game()
    game.setup()

if __name__ == '__main__':
	main()